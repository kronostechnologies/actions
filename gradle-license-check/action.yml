name: Run a Gradle license Check
description: |
  Check Gradle dependencies licenses on the project.
  This action requires the global-conventions plugin to be installed.
  See https://github.com/kronostechnologies/standards/tree/master/gradle/global-conventions

inputs:
  gradle-properties:
    description: Content of a gradle.properties file that will be passed to the gradle runner.
    required: false
  working-directory:
    description: Relative path under $GITHUB_WORKSPACE where the root project is located.
    required: false
    default: "."
  report-retention-days:
    description: Duration in days to preserve reports.
    required: true
    default: "5"
  task-name:
    description: The license check task name. Defaults to "checkLicense".
    required: true
    default: checkLicense

runs:
  using: composite
  steps:
    - name: Action context
      shell: bash
      id: context
      run: |
        working_directory=$(realpath ${{ inputs.working-directory }})
        echo "::set-output name=working-directory::$working_directory"
        echo "::set-output name=reports-directory::$working_directory/build/reports/dependency-license"

    - name: Scan Gradle dependencies
      uses: burrunan/gradle-cache-action@v1.10
      with:
        gradle-version: wrapper
        build-root-directory: ${{ steps.context.outputs.working-directory }}
        gradle-dependencies-cache-key: |
          buildSrc/**/Dependencies.kt
        arguments: ${{ inputs.task-name }}
        properties: ${{ inputs.gradle-properties }}

    - name: Upload license inventory report
      uses: actions/upload-artifact@v2
      if: "!cancelled()"
      with:
        name: License inventory report
        retention-days: ${{ inputs.report-retention-days }}
        path: ${{ steps.context.outputs.reports-directory }}/license-inventory-report.html

    - name: Upload dependencies without allowed license report
      uses: actions/upload-artifact@v2
      if: "!cancelled()"
      with:
        name: Dependencies without allowed licenses
        retention-days: ${{ inputs.report-retention-days }}
        path: ${{ steps.context.outputs.reports-directory }}/dependencies-without-allowed-license.json
