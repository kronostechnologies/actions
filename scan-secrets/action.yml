name: Scan commits for leaked secrets.
description: |
  Scan commits for leaked secrets.
  By default, pull request events will only scan new commits and push events will scan all commits.

# TODO: Improve efficiency of this action:
#   - Automatically sync. gitleaks.bash & gitleaks.toml from standards to here. See https://github.com/BetaHuhn/repo-file-sync-action
#   - This should `runs-on: Dockerfile` based on gitleaks official image. Docker pulls in a bash script don't use cache.
#     - Alternative is to use actions/cache to cache the gitleaks image.

inputs:
  report-retention-days:
    description: Duration in days to preserve reports.
    required: true
    default: "5"
  working-directory:
    description: Working directory where commands will be executed.
    required: false
    default: .

runs:
  using: composite
  steps:
    - name: Scan for leaked secrets
      id: scan
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        curl -sSL https://raw.githubusercontent.com/kronostechnologies/standards/master/bin/gitleaks.bash | bash

        result=$?
        echo "::set-output name=status::$result"
        if [ $result -ne 0 ]; then
          exit $result
        fi

    - name: Upload results
      uses: actions/upload-artifact@v2
      if: github.action_status == 'failure'  # gitleaks only exports a SARIF file when leaks are detected
      with:
        name: secrets-scan.sarif
        retention-days: ${{ inputs.report-retention-days }}
        path: |
          ${{ inputs.working-directory }}/build/gitleaks/gitleaks.sarif
