name: Generate and publish an openapi SDK
description: |
  Run our OpenApi-SDK gradle tasks to generate and publish a SDK.

  See https://github.com/kronostechnologies/standards/tree/master/gradle/openapi-sdk

inputs:
  generator-name:
    description: |
      Name of the generator supported by the openapi-sdk plugin.
      See https://github.com/kronostechnologies/standards/tree/master/gradle/openapi-sdk
    required: true
  gradle-properties:
    description: Content of a gradle.properties file that will be passed to the gradle runner.
    required: false
    default: ""
  gradle-project-path:
    description: |
      Gradle project path. For example: bff.
      Defaults to the root project.
    required: true
    default: "."
  openapi-spec-file:
    description: Optionnal openapi.yaml spec file path.
    required: false
    default: ""
  publish:
    description: true to publish this SDK once built.
    required: true
    default: "false"
  publish-pat:
    description: Personal access token used to publish. Full `repo` access is required.
    required: false
  working-directory:
    description: Relative path under $GITHUB_WORKSPACE where the root project is located.
    required: false
    default: "."

runs:
  using: "composite"
  steps:
    - name: Lookup properties
      id: properties
      shell: bash
      run: |
        PROPERTIES=()
        TASK=build

        GENERATOR=${{ inputs.generator-name }}
        GENERATOR=${GENERATOR,,}
        GENERATOR=${GENERATOR^}

        if [[ "${{ inputs.publish }}" == "true" ]]; then
          TASK=publish
          PROPERTIES+=(gpr.write.key=${{ inputs.publish-pat }});

          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
        fi

        if [[ "${{ inputs.openapi-spec-file }}" != "" ]]; then
          PROPERTIES+=(openApiSpec=${{ inputs.openapi-spec-file }});
        fi

        echo "::set-output name=task-name::${TASK}${GENERATOR}Sdk"
        echo "PROPERTIES<<EOF" >> $GITHUB_ENV
        printf "%s\n" "${PROPERTIES[@]}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Publish SDK
      uses: burrunan/gradle-cache-action@v1.10
      with:
        gradle-version: wrapper
        gradle-dependencies-cache-key: buildSrc/**/Dependencies.kt
        arguments: -p ${{ inputs.gradle-project-path }} ${{ steps.properties.outputs.task-name }}
        build-root-directory: ${{ inputs.working-directory }}
        properties:
          ${{ inputs.gradle-properties }}
          ${{ env.PROPERTIES }}
