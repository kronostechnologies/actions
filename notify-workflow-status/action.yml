name: Notify us when a workflow failure happens
description: |
  Push a whole workflow result to a Slack webhook.

  ```yaml
  steps:
    - name: Post status to Slack
      uses: kronostechnologies/actions/notify-workflow-status@v1
      with:
        needs: $ {{ toJSON(needs) }}
        slack-webhook-url: "some url generated on slack"
  ```

inputs:
  allow-statuses:
    description: |
      List of statuses for which notifications will be published.
      Allowed values are success, cancelled and failure.
      Defaults to only failure.
    required: false
    default: failure
  needs:
    description: |
      The GitHub Actions `needs` context which should be passed in using toJSON():
      `$ {{ toJSON(needs) }}`
    required: false
  slack-webhook-url:
    description: The Slack webhook that will receive our notifications.
    required: true
  workflow-status:
    description: |
      The workflow status. Must be one of success, cancelled or failure.
      If specified, it has precedence over `needs`.
    required: false

runs:
  using: composite
  steps:
    - name: Find workflow status
      id: workflow
      shell: bash
      run: |
        STATUS=unknown
        if ${{ toJSON(inputs.workflow-status == 'cancelled' || contains(fromJSON(inputs.needs).*.result, 'cancelled')) }}; then
          STATUS=cancelled
        elif ${{ toJSON(inputs.workflow-status == 'failure' || contains(fromJSON(inputs.needs).*.result, 'failure')) }}; then
          STATUS=failure
        elif ${{ toJSON(inputs.workflow-status == 'success' || contains(fromJSON(inputs.needs).*.result, 'success')) }}; then
          STATUS=success
        fi

        echo ::set-output name=status::$STATUS

    - name: Post status to Slack
      uses: 8398a7/action-slack@v3.9.2
      # TODO: Blocked by https://github.com/actions/runner/issues/834
      #  if: contains(inputs.allow-statuses, steps.workflow.outputs.status)
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack-webhook-url }}
      with:
        author_name: CI Results
        fields: repo,commit,author,ref,workflow,message
        status: custom
        custom_payload: |
          {
            attachments: [{
              color: '${{ steps.workflow.outputs.status }}' === 'success' ? 'good' : '${{ steps.workflow.outputs.status }}' === 'failure' ? 'danger' : '#999999',
              text: `${process.env.AS_REPO}/${process.env.AS_WORKFLOW}: ${{ steps.workflow.outputs.status }}!`,
              fields: [
                {
                  title: 'Ref',
                  value: `${process.env.AS_REF}`,
                  short: true
                },
                {
                  title: 'Commit',
                  value: `${process.env.AS_COMMIT}`,
                  short: true
                },
                {
                  title: 'Description',
                  value: `${process.env.AS_MESSAGE}`,
                  short: false
                }
              ]
            }]
          }
